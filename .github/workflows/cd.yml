name: cd
on:
  workflow_dispatch:
  push:
    branches:
      - master
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  Dev:
     runs-on: ubuntu-latest
     environment: Dev
     steps:
      - uses: actions/checkout@v2
        
 
  QA:
        name: QA
        concurrency: 
          group: QA
          cancel-in-progress: true
        runs-on: ubuntu-latest
        environment:
             name: QA
            
        needs: Dev
        steps:
          - uses: actions/checkout@v2
            with:
              fetch-depth: 0  
  build-and-deploy-front-end:
               runs-on: ubuntu-latest
               strategy:
                    matrix:
                     node-version: [ 12.x, 14.x]
               steps:
                    - uses: actions/checkout@v2
                    - uses: actions/setup-node@v2
                    - name: Use Node.js ${{ matrix.node-version }}
                      uses: actions/setup-node@v1
                      with:
                       node-version: ${{ matrix.node-version }}
                    - name: Install Dependencies
                      run: npm install -g @angular/cli
                    - name: install ionic
                      run : npm install -g ionic
                    - run: |
                         npm install 
                         nohup bash -c "ionic build port 8100 --configuration=staging -b 2>&1 &" && sleep 9
                    #- name: Build
                     # run: npm run ionic build --configuration=staging
                    #- name: Run Tests
                     # run: npm run test
                    - name: Run deploy 
                      run: git update-index --chmod=+x ./build-web.bat 
                      
                      #run: rm -rf /var/www/build && mv ./build/var/www/
                      
                      
                   
               
                
                
        
  build-and-deploy-back-end:
                      runs-on: ubuntu-latest
                      steps:
                         - uses: actions/checkout@v2
                         - name: Setup .NET Core
                           uses: actions/setup-dotnet@v1
                           with:
                            dotnet-version: '6.0.x'
                                                      
                        
                                    
  QA-Pass:
        name:  QA-Pass
        concurrency: 
          group:  QA-Pass
          cancel-in-progress: true
        runs-on: self-hosted
        environment:
             name: QA-Pass
        needs: QA
        steps:
          - uses: actions/checkout@v2
            with:
              fetch-depth: 0            
              
     
  prod:
     runs-on: self-hosted
     environment: prod
     needs:   QA-Pass
     steps:
      - uses: actions/checkout@v2
