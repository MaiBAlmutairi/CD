name: cd
on:
  workflow_dispatch:
  push:
    branches:
      - master
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  Dev:
     runs-on: ubuntu-latest
     environment: Dev
     steps:
      - uses: actions/checkout@v2
        
 
  QA:
        name: QA
        concurrency: 
          group: QA
          cancel-in-progress: true
        runs-on: self-hosted
        environment:
             name: QA
             url: http://localhost/
        needs: Dev
        steps:
          - uses: actions/checkout@v2
            with:
              fetch-depth: 0  
  build-and-deploy-front-end:
                runs-on: ubuntu-latest
                steps:
                  - run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" >> ~/.npmrc
                  - uses: actions/setup-node@v1
                    with:
                     node-version: 14.x
                  - uses: actions/checkout@v2
                    with:
                     fetch-depth: 0
                  - name: Restore Dependency Cache
                    uses: actions/cache@v1
                    with:
                     path: ~/.npm
                     key: ${{ runner.OS }}-dependency-cache-${{ hashFiles('**/package.json') }}
                  - run: npm install
                  - run: npm run bootstrap
                  - run: npm run publish:ci -- --yes
                   
               
                
                
        
  build-and-deploy-back-end:
                      runs-on: self-hosted
                      steps:
                         - uses: actions/checkout@v2
                         - name: Setup .NET Core
                           uses: actions/setup-dotnet@v1
                           with:
                            dotnet-version: '6.0.x'
                                                      
                        # dotnet build and publish
                         - name: Build with dotnet
                           run: 
                              dotnet build --configuration Release .\dotnet-core-webapp

                              #Set-ExecutionPolicy -ExecutionPolicy Unrestricted -Scope Process -Force 
                              
                         - name: dotnet publish 
                           run: |
                            dotnet publish -c Release -o dotnetcorewebapp .\dotnet-core-webapp
                         - name: Deploy to IIS
                           run: |
                             iisreset /stop
                             Copy-Item ./dotnetcorewebapp/* C:/inetpub/wwwroot/dotnetcore-webapp -Recurse -Force
                             iisreset /start
    
                         - name: Curl the website as a smoke test
                           run: curl http://localhost/dotnetcore-webapp

                         - name: Run Web Test
                           run: |
                             dotnet build --configuration Release .\dotnet-core-webapp.webtest
                              cd .\dotnet-core-webapp.webtests
                             dotnet test             
  QA-Pass:
        name:  QA-Pass
        concurrency: 
          group:  QA-Pass
          cancel-in-progress: true
        runs-on: ubuntu-latest
        environment:
             name: QA-Pass
        needs: QA
        steps:
          - uses: actions/checkout@v2
            with:
              fetch-depth: 0            
              
     
  prod:
     runs-on: ubuntu-latest
     environment: prod
     needs:   QA-Pass
     steps:
      - uses: actions/checkout@v2
